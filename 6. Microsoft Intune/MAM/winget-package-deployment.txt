# WinGet Software installation script for Intune
#
# Mike Dammer / Brand New Day / July 2024
#
# Usage
#
# Install: 
# 	powershell -executionpolicy bypass -file BNDInstall.ps1 "install" "[winget-id]"
# Uninstall: 
# 	powershell -executionpolicy bypass -file BNDInstall.ps1 "uninstall" "[winget-id]"
#
# Check https://winget.run or https://winstall.app for winget ID

param(
    [Parameter(Mandatory)]
    [string]$Action,
    [Parameter(Mandatory)]
    [string]$AppName,
    [Parameter()]
    [string]$AppSource = "winget"
)

# Ensure the log directory exists
$logDir = "C:\ProgramData\WinGetLogs"
if (-Not (Test-Path -Path $logDir)) {
    mkdir $logDir
}

# Locate the winget executable
$nativeAppFilePath = Get-ChildItem "C:\Program Files\WindowsApps" -Recurse -File |
    Where-Object { $_.Name -like "winget.exe" } |
    Select-Object -ExpandProperty FullName |
    Select-Object -Last 1

if (-Not $nativeAppFilePath) {
    "Winget.exe Not Found" | Out-File "$logDir\InstallScript-error.log" -Append
    Write-Error -Message "Winget not found." -Category OperationStopped
    exit
}

# Switch statement to handle install and uninstall actions
switch ($Action) {
    "install" {
        try {
            $response = &"$nativeAppFilePath" install $AppName -s $AppSource --silent --accept-source-agreements --accept-package-agreements --force
        }
        catch {
            $_.Exception.Message | Out-File "$logDir\InstallScript-error.log" -Append
            Write-Error -Message "Error happened during installation." -Category OperationStopped
        }
    }
    "uninstall" {
        try {
            $response = &"$nativeAppFilePath" uninstall $AppName --silent --all 
        }
        catch {
            $_.Exception.Message | Out-File "$logDir\InstallScript-error.log" -Append
            Write-Error -Message "Error happened during uninstallation." -Category OperationStopped
        }
    }
    default {
        Write-Error -Message "Invalid action specified. Use 'install' or 'uninstall'." -Category InvalidArgument
        exit
    }
}

# Log the response
if ($response -like "*Successfully*") {
    $response | Out-File "$logDir\$AppName.log" -Force
} else {
    $response | Out-File "$logDir\InstallScript-error.log" -Append
    Write-Error -Message "Error happened during action: $Action." -Category OperationStopped
}
